service: chaos-injection-demo

custom:
  thundraApiKey: 712c3050-f138-492b-9ce0-88ed5967054d
  stage: dev #Configure your stage if you want
  region: eu-west-1 #Configure your AWS region if you want
  profile: default #Configure your AWS profile if you want
  thundra:
    node:
      layer:
        version: latest


provider:
  name: aws
  runtime: nodejs10.x
  stage: ${self:custom.stage}
  region: ${self:custom.region}
  profile: ${self:custom.profile}
  environment:
      thundra_apiKey: ${self:custom.thundraApiKey}
      thundra_agent_lambda_report_rest_baseUrl: https://api-lab.thundra.io/v1/
  memorySize: 256
  timeout: 5
  iamRoleStatements:
    - Effect: Allow
      Action:
        - logs:*
      Resource: [
        "*"
      ]

plugins:
  - serverless-plugin-thundra

functions:
  error_injection_example:
    name: chaos_error_injection_example
    handler: error_injection_example.handler
    #environment:
      #thundra_agent_lambda_trace_span_listener: FilteringSpanListener[listener=ErrorInjectorSpanListener,config.errorType=RedisError,config.injectOnFinish=true,filter.className=Redis,filter.tag.redis.command=GET]
  latency_injection_example:
    name: chaos_latency_injection_example
    handler: latency_injection_example.handler
    environment:
      thundra_agent_lambda_trace_span_listener: FilteringSpanListener[listener=LatencyInjectorSpanListener,config.delay=2000,config.injectOnFinish=true,filter.className=AWS-Lambda,filter.tag.aws.lambda.name=upstream-lambda]